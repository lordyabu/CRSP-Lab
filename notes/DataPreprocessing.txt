╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                     MAJOR OPERATIONS                                                 ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

1. Some stock values have negative values for some reason in PRC and OPENPRC columns - If you want to convert all to
positive using ABS(vals) run the .src/helperFunctions/dataPreprocessing/forcePositives.py function. (Have not fully tested
whether these instances of negative prices are intentional or by accident)

2. Most stocks have some NaN values in PRC(Close Price) and OPENPRC columns (including AAPL). A fix using now is to
    a. fill missing OPENPRC with their previous row's PRC
    b. fill missing PRC with current rows OPENPRC, if that fails then do previous row's PRC
    c. Chop off all beginning rows with NaNs until first row with no NaNs

    This is done in .src/helperFunctions/dataPreprocessing/replaceNaNs.py

    side note. If there are multiple rows in a row with NaN values, that stock will be excluded if exclude_nan = True
    in ./src/helperFunctions/findTimeSpanStocks.py

3. To see what affects are currently applied on your dataset check the majorOpLog in .src/tests.
This log will be empty upon initialization and will keep track of the major operations done on the dataset.
Currently, there are 2 major operations SHOWN ABOVE

╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                Open High Low Close(OHLC)                                             ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

1. Currently, using 5-min returns to calculate OHLC.



╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                Picking Stocks to Study                                               ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

1. Currently, out of the 10040 stocks this is only using 1120

2. They are chosen after applying the MO above

3. Then only stocks that have all values from 2010-01-04 to 2020-12-31 are chosen, leaving a total of 1120



╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                       Non-Trades                                                     ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

0. Non-trades are points of data in which a trade entry does not occur. They are calculated as followed.

1. Pick what strategy to generate non-trades for
2. Loop over every stock and generate an equal number of non-trades as there are trades for that stock
    a. Specify distances from trades and the splits in which to do. E.X. dist=(min=1, low=3, med=5, max=8), splits=(34, 33, 33)
        - This means a third of the non-trades will be between 1 and 3 days away inclusive, a third will be between 3 and 5
          days away inclusive, and the last third will be between 5 and 8 days away inclusive



╔══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╗
║                                                   Naive Classification                                               ║
╚══════════════════════════════════════════════════════════════════════════════════════════════════════════════════════╝

1. For Bollinger / Box if

Current scaled price > .95 or price < .05 then classify as 1

2. For Turtle

If Current scaled price == 1 or price == 0 then classify as 1
